<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hellopai.github.io/</id>
    <title>Gridea</title>
    <updated>2020-02-16T12:06:42.372Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hellopai.github.io/"/>
    <link rel="self" href="https://hellopai.github.io//atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://hellopai.github.io//images/avatar.png</logo>
    <icon>https://hellopai.github.io//favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[pip install requests]]></title>
        <id>https://hellopai.github.io//post/pip-install-requests</id>
        <link href="https://hellopai.github.io//post/pip-install-requests">
        </link>
        <updated>2020-02-16T12:05:09.000Z</updated>
        <content type="html"><![CDATA[<p>使用时需要退出python命令行界面进行操作<br>
<img src="https://hellopai.github.io//post-images/1581854723516.png" alt=""></p>
<p>否则会出现如下情况<br>
<img src="https://hellopai.github.io//post-images/1581854790322.png" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[java基本数据类型]]></title>
        <id>https://hellopai.github.io//post/java-ji-ben-shu-ju-lei-xing-1</id>
        <link href="https://hellopai.github.io//post/java-ji-ben-shu-ju-lei-xing-1">
        </link>
        <updated>2020-01-03T08:19:07.000Z</updated>
        <content type="html"><![CDATA[<p>整型：<br>
byte    1byte      1 0 0 0 0 0 0 ~0 1 1 1 1 1 1 1 :-128~127(将-0当成-128)<br>
short   2byte<br>
int       4byte<br>
long    8byte<br>
浮点型：<br>
float    4byte<br>
double  8byte<br>
字符型：<br>
char   2byte<br>
布尔型：<br>
boolean  1byte</p>
<pre><code> 公式： 2^{(字节数*8) -1}  ~2^{(字节数*8) -1}-1 
 脑子太笨一直记不住！！！</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[类名-包名-变量名命名规则]]></title>
        <id>https://hellopai.github.io//post/lei-ming-bao-ming-bian-liang-ming-ming-ming-gui-ze</id>
        <link href="https://hellopai.github.io//post/lei-ming-bao-ming-bian-liang-ming-ming-ming-gui-ze">
        </link>
        <updated>2019-12-17T04:15:27.000Z</updated>
        <content type="html"><![CDATA[<p>类名：(首字母要大写)<br>
public class Student{<br>
...<br>
}<br>
包名：（一般是小写）<br>
com.gouzi.entity<br>
变量名：（一般是小写）<br>
int num;<br>
方法名：（首字母小写后面字母开头要大写）<br>
public static void getStuNO(){</p>
<p>}</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[封装技巧]]></title>
        <id>https://hellopai.github.io//post/feng-zhuang-ji-qiao</id>
        <link href="https://hellopai.github.io//post/feng-zhuang-ji-qiao">
        </link>
        <updated>2019-12-02T15:54:16.000Z</updated>
        <content type="html"><![CDATA[<p><img src="https://hellopai.github.io//post-images/1575302061591.png" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[调用百度Unit接口实现聊天自动回复机器人]]></title>
        <id>https://hellopai.github.io//post/diao-yong-bai-du-unit-jie-kou-shi-xian-liao-tian-zi-dong-hui-fu-ji-qi-ren-1</id>
        <link href="https://hellopai.github.io//post/diao-yong-bai-du-unit-jie-kou-shi-xian-liao-tian-zi-dong-hui-fu-ji-qi-ren-1">
        </link>
        <updated>2019-12-02T15:24:27.000Z</updated>
        <content type="html"><![CDATA[<p>1.请求AccessToken说明（https://ai.baidu.com/docs#/Auth/top）<br>
HTTP方法：POST<br>
请求URL：https://aip.baidubce.com/rpc/2.0/unit/service/chat<br>
<img src="https://hellopai.github.io//post-images/1575300493063.png" alt=""><br>
2.调用接口<br>
package com.baidu.ai.aip.unit;<br>
import com.baidu.ai.aip.utils.HttpUtil;<br>
/*</p>
<ul>
<li>unit对话服务<br>
<em>/<br>
public class UnitService {<br>
/</em>*
<ul>
<li>重要提示代码中所需工具类</li>
<li>FileUtil,Base64Util,HttpUtil,GsonUtils请从</li>
<li>https://ai.baidu.com/file/658A35ABAB2D404FBF903F64D47C1F72</li>
<li>https://ai.baidu.com/file/C8D81F3301E24D2892968F09AE1AD6E2</li>
<li>https://ai.baidu.com/file/544D677F5D4E4F17B4122FBD60DB82B3</li>
<li>https://ai.baidu.com/file/470B3ACCA3FE43788B5A963BF0B625F3</li>
<li>下载<br>
*/<br>
private static String utterance() {<br>
// 请求URL<br>
String talkUrl = &quot;https://aip.baidubce.com/rpc/2.0/unit/service/chat&quot;;<br>
try {<br>
// 请求参数<br>
String params = &quot;{&quot;log_id&quot;:&quot;UNITTEST_10000&quot;,&quot;version&quot;:&quot;2.0&quot;,&quot;service_id&quot;:&quot;S10000&quot;,&quot;session_id&quot;:&quot;&quot;,&quot;request&quot;:{&quot;query&quot;:&quot;你好&quot;,&quot;user_id&quot;:&quot;88888&quot;},&quot;dialog_state&quot;:{&quot;contexts&quot;:{&quot;SYS_REMEMBERED_SKILLS&quot;:[&quot;1057&quot;]}}}&quot;;<br>
String accessToken = &quot;#####调用鉴权接口获取的token#####&quot;;<br>
String result = HttpUtil.post(talkUrl, accessToken, &quot;application/json&quot;, params);<br>
return result;<br>
} catch (Exception e) {<br>
e.printStackTrace();<br>
}<br>
return null;<br>
}<br>
public static void main(String[] args) {<br>
utterance();<br>
}<br>
}<br>
3.注意事项<br>
1°获取返回的字符串为：<br>
<img src="https://hellopai.github.io//post-images/1575300755112.png" alt=""><br>
<img src="https://hellopai.github.io//post-images/1575300837164.png" alt=""><br>
2°将请求对话的json字符串中的某个value值替换<br>
<img src="https://hellopai.github.io//post-images/1575301441630.png" alt=""><br>
<img src="https://hellopai.github.io//post-images/1575301817456.png" alt=""></li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SAXReader将xml形式的文件转换为map形式]]></title>
        <id>https://hellopai.github.io//post/saxreader-jiang-xml-xing-shi-de-wen-jian-zhuan-huan-wei-map-xing-shi</id>
        <link href="https://hellopai.github.io//post/saxreader-jiang-xml-xing-shi-de-wen-jian-zhuan-huan-wei-map-xing-shi">
        </link>
        <updated>2019-11-23T09:00:18.000Z</updated>
        <content type="html"><![CDATA[<p>//实现将用户发送的xml文件转换成map文件<br>
public static HashMap&lt;String, String&gt; XmlToMap(ServletInputStream inputStream) {<br>
//导入dom4j.jar包,获取SAXReader对象<br>
SAXReader reader = new SAXReader();<br>
//定义一个haspMap，用来作为返回值<br>
HashMap&lt;String, String&gt; map=new HashMap&lt;&gt;();<br>
try {<br>
//读取输入流，转换成为document形式的文件<br>
Document doc = reader.read(inputStream);<br>
///获取文件的根目录，比如 <emp> <name></name></emp>中的emp是根目录，name是子节点<br>
Element rootElement = doc.getRootElement();<br>
//这里是因为得到的xml文件中所有根目录都是不一样的故不需要添加参数<br>
List<Element> elements = rootElement.elements();<br>
//遍历取出里面所有的子节点<br>
for(Element e:elements) {<br>
//name为子元素名字，text为子元素值<br>
map.put(e.getName(), e.getText());<br>
}<br>
} catch (DocumentException e) {<br>
// TODO Auto-generated catch block<br>
e.printStackTrace();<br>
}<br>
return map;<br>
}<br>
这里注意区别根目录和子元素，第一级为根目录，第二级、第三级均为子目录（子目录有多个的可以通过几个for循环取出参考博客：https://blog.csdn.net/qq_36501591/article/details/80522531）<br>
<img src="https://hellopai.github.io//post-images/1574502219163.png" alt=""><br>
<img src="https://hellopai.github.io//post-images/1574502303082.png" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[读取request输入流，转化为控制台输出代码]]></title>
        <id>https://hellopai.github.io//post/du-qu-request-shu-ru-liu-zhuan-hua-wei-kong-zhi-tai-shu-chu-dai-ma-1</id>
        <link href="https://hellopai.github.io//post/du-qu-request-shu-ru-liu-zhuan-hua-wei-kong-zhi-tai-shu-chu-dai-ma-1">
        </link>
        <updated>2019-11-23T08:56:03.000Z</updated>
        <content type="html"><![CDATA[<p>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {<br>
//判断用户发送信息到本地项目服务器中<br>
System.out.println(&quot;post&quot;);</p>
<pre><code>	//接收微信用户的xmL数据包
	ServletInputStream is = request.getInputStream();
	//使用read(byte[])方法，相对快速的读入数据
	byte[] b=new byte[1024];
	int len=0;
	//使用StringBuffer连接数据
	StringBuffer sb=new StringBuffer();
	while((len=is.read(b))!=-1) {
		//定义一个字符串，从0开始，读len长度个数据
		sb.append(new String(b,0,len));
	}
	System.out.println(sb.toString());
}</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[秒速五厘米]]></title>
        <id>https://hellopai.github.io//post/miao-su-wu-li-mi</id>
        <link href="https://hellopai.github.io//post/miao-su-wu-li-mi">
        </link>
        <updated>2019-11-11T14:03:43.000Z</updated>
        <content type="html"><![CDATA[<p>我清清楚楚地明白，今后我们可能没有办法在一起了，横亘在我们面前的是过于巨大的人生和渺茫无尽头的时间。</p>
<p>突然之间我意识到，我们马上就必须回到自己的地方，从此以后又要孤零零一个人。明明直到刚才我们还说了那么多的话，还感觉到两人是那么的亲近，可为什么就要突然分离呢？</p>
<p>我没有告诉明里我写了一封很长的信给她，但是最终弄丢了。因为我认为今后还会再见面的，而且和明里的初吻让我觉得世上的一切都变得和以前不一样了。</p>
<p>原来心真正疼痛的时候连身体都会感到剧烈的痛楚，他第一次体会到这点。</p>
<p>这世界的秘密中隐藏着一条通向过往的道路，道路那头连接着很久之前就逝去的梦想和思索、曾经喜爱的地方和放学后听的音乐、与那个特别的女孩定下的无法实现的约定。</p>
<p>他想，世上的事情就是这样，当他还是少年时，眼中的星空是那么的璀璨夺目，可是如今看来，早已没有当初那种动人心魄的震撼了。</p>
<p>那个女孩知道，你一定会去见她的，所以把绷紧的身体放松一点吧，想象一下你与恋人一起度过的快乐时光，虽然你们今后再也无法见面了，但还是请你将那段奇迹一般的时光当做珍宝一样，永远收藏进你的心灵深处吧。</p>
<p>关于那个男孩子的回忆，已经成为了我身体重要的一部分，就像吃下的东西会化作血肉一般，他已经是我心中无法割舍的一部分了。</p>
<p>只要人活着，悲伤就会逐渐堆积。</p>
<p>自从十五年前在车站和她别理，这是他第一次哭泣。泪水疯狂地从眼眶中向外流淌，止都止不住，仿佛隐藏在身体内的巨大冰块融化了一般，他不停地哭着，完全控制不了自己。</p>
<p>他想<br>
电车通过之后，她还会在那里吗<br>
在或不在都已无所谓了<br>
如果她就是那个人的话<br>
能和她这样相遇已经是很大的奇迹了<br>
等这列电车开过之后就继续向前走吧<br>
-秒速五厘米<br>
<img src="https://hellopai.github.io//post-images/1573481154723.jpg" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[one more time,one more chance]]></title>
        <id>https://hellopai.github.io//post/one-more-timeone-more-chance</id>
        <link href="https://hellopai.github.io//post/one-more-timeone-more-chance">
        </link>
        <updated>2019-11-10T13:13:04.000Z</updated>
        <content type="html"><![CDATA[<p>还要我再一次失去什么，才能让心得到宽恕<br>
还要再承受怎么样的痛楚，才能再次与你相遇<br>
one more time,季节啊请你不要再继续变换<br>
one more time,曾经与你嬉戏欢闹的时光啊<br>
每一次争吵的时候，总会是我先让步<br>
你那任性的性格，却让我更加迷恋<br>
one more chance,被记忆牵绊止足不前<br>
one more chance,无法选择的下个地点<br>
一直在到处茫然寻觅着你，到处在寻找着你的身影<br>
铁路对面的月台，小巷深处的窗口<br>
可我却明明知道你不可能会在那里<br>
如果能够实现一个愿望的话，我只想要立刻飞奔向你<br>
已经再没有什么了，没有什么做不到的</p>
<p>如果只是为了排遣寂寞的话，那无论是谁应该都可以<br>
但在这繁星都在坠落的夜里，我再也无法欺骗我自己<br>
one more time，季节啊请你不要再继续变换<br>
one more time,曾经与你嬉戏欢闹的时光啊<br>
一直在到处茫然寻觅这你，到处寻找着你的身影<br>
交叉的十字路口，每个夜晚的梦里<br>
可我却明明知道你不可能会在那里<br>
如果真的能够有奇迹的话，我只想要立刻就能够让你看到<br>
崭新的清晨，以及那个崭新的我<br>
还有那一句没能说出口的喜欢你<br>
夏日的记忆不断回旋<br>
刹时之间小时的悸动<br>
一直在到处茫然寻觅着你，到处在寻找着你的身影<br>
黎明照耀的街道，樱花盛开的小镇<br>
可我明明知道你不可能会来到这里<br>
如果能够实现一个愿望的话，我只想要立刻飞奔向你<br>
已经再没有什么，没有什么做不到的<br>
我只愿不顾一切，再次将你拥入怀里<br>
一直在到处茫然寻觅着你，到处找寻你散落的碎片<br>
履行经过的小店，报纸边缘的角落<br>
可我却明明知道你不可能会在那里<br>
如果真的能够有奇迹的话，我只想要立刻就能够让你看到<br>
崭新的清晨，以及那个崭新的我<br>
还有那一句没能说出口的喜欢你<br>
一直在到处寻觅着你，到处找寻你遗落的笑容<br>
等待着快速列车通过，环顾着铁路道口附近<br>
可我却明明知道你不可能会在那里<br>
无论生命要如何的轮回往复，不管如何都要到你的身边<br>
已经没有任何的任何想要拥有的了<br>
除你之外，因为再也没有比你更重要的了...<br>
<img src="https://hellopai.github.io//post-images/1573394243894.jpg" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[我的第一条博客]]></title>
        <id>https://hellopai.github.io//post/wo-de-di-yi-tiao-bo-ke-1</id>
        <link href="https://hellopai.github.io//post/wo-de-di-yi-tiao-bo-ke-1">
        </link>
        <updated>2019-11-10T02:44:48.000Z</updated>
        <content type="html"><![CDATA[<p>你好呀这是我的第一条博客</p>
]]></content>
    </entry>
</feed>